Program([
	FuncDecl(add, FloatType, [Param(i, FloatType)], None, BlockStmt([ReturnStmt(Id(i))]))
	FuncDecl(inc, VoidType, [OutParam(n, IntegerType), InheritParam(delta, IntegerType), InheritOutParam(hallo, AutoType)], add, BlockStmt([AssignStmt(ArrayCell(a, [IntegerLit(1), IntegerLit(2)]), ArrayCell(b, [IntegerLit(1), IntegerLit(2)])), AssignStmt(ArrayCell(a, [IntegerLit(1), ArrayCell(a, [IntegerLit(1), IntegerLit(2)])]), ArrayCell(b, [IntegerLit(6), IntegerLit(9)])), AssignStmt(Id(n), BinExpr(+, BinExpr(+, Id(n), Id(delta)), Id(hallo))), AssignStmt(Id(n), BinExpr(-, BinExpr(-, Id(n), Id(delta)), Id(hallo))), AssignStmt(Id(n), BinExpr(*, BinExpr(*, Id(n), Id(delta)), Id(hallo))), AssignStmt(Id(n), BinExpr(/, BinExpr(/, Id(n), Id(delta)), Id(hallo))), AssignStmt(Id(n), BooleanLit(True)), AssignStmt(Id(n), BinExpr(+, BinExpr(-, BinExpr(+, BinExpr(%, Id(n), IntegerLit(1)), Id(hallo)), IntegerLit(1)), IntegerLit(2))), AssignStmt(Id(n), BinExpr(&&, BinExpr(&&, Id(n), Id(delta)), Id(hallo))), AssignStmt(Id(n), BinExpr(||, BinExpr(||, Id(n), Id(delta)), Id(hallo))), AssignStmt(Id(n), BinExpr(::, Id(n), Id(n))), AssignStmt(Id(n), BinExpr(+, Id(n), FuncCall(add, [Id(delta)]))), AssignStmt(Id(n), ArrayCell(a, [IntegerLit(1), ArrayCell(a, [IntegerLit(1), ArrayCell(a, [IntegerLit(1), IntegerLit(2)])])])), AssignStmt(Id(n), BinExpr(!=, BinExpr(>, UnExpr(<class 'str'>, Id(n)), FuncCall(FAsLE, [UnExpr(<class 'str'>, BooleanLit(True))])), BinExpr(==, Id(bool), BinExpr(>=, Id(lean), Id(bool))))), AssignStmt(Id(n), BinExpr(==, BinExpr(||, BinExpr(&&, UnExpr(<class 'str'>, Id(n)), Id(n)), Id(n)), BinExpr(||, Id(n), UnExpr(<class 'str'>, Id(n))))), ReturnStmt(BinExpr(+, BinExpr(*, Id(n), ArrayCell(a, [IntegerLit(1), IntegerLit(1)])), BinExpr(/, IntegerLit(12), FuncCall(foo, [IntegerLit(12), IntegerLit(4)])))), ReturnStmt(Id(n)), BreakStmt(), ContinueStmt(), ReturnStmt(), ReturnStmt(FuncCall(add, [IntegerLit(1), FuncCall(add, [IntegerLit(1), IntegerLit(2)])]))]))
])